@page "/{url}"
@layout Layout.LayoutSecundario;
@using guslinks.Components.Models;

    @if (carregarConteudo)
    {
        <img class="img-perfil" src="imagens/perfil/@imgPerfil" />

        <div class="nome-perfil">@listaUsuarios.FirstOrDefault(c => c.id == usuarioAtual).nome</div>

        <div class="texto-perfil">@listaUsuarios.FirstOrDefault(c => c.id == usuarioAtual).texto</div>

        @foreach (var link in linksUsuario.OrderBy(c => c.ordem))
        {
            <a class="links" href="@link.link"><div class="bt-links">@link.texto</div></a>
        }

        <div class="ico-links">
            @foreach (var rede in redesUsuario.OrderBy(c => c.ordem))
            {
                <a class="links" href="@rede.link"><i class="bi @listaIcones.FirstOrDefault(c => c.id == rede.icone).icoRede"></i></a>        
            }
        </div>
    }


@code {
    [Parameter]
    public string url { get; set; }
    public int usuarioAtual { get; set; }
    public List<Links> linksUsuario { get; set; }
    public List<Redes> redesUsuario { get; set; }
    public string imgPerfil { get; set; }
    public bool carregarConteudo = false;

    List<Usuario> listaUsuarios = new List<Usuario>
    {
        new Usuario { id = 1, nome = "Gustavo Ferreira", texto = "Analista de Sistemas / Dev Full Stack", link = "gus", email = "gus@example.com", senha = "gus123", plus = true, ativo = true },
    };

    List<Links> listaLinks = new List<Links>
    {
        new Links { id = 1, idUsuario = 1, link = "#", texto = "LINK", imagem = "", ordem = 1 , ativo = true},
        new Links { id = 2, idUsuario = 1, link = "#", texto = "LINK", imagem = "", ordem = 2 , ativo = true},
        new Links { id = 3, idUsuario = 1, link = "#", texto = "LINK", imagem = "", ordem = 3 , ativo = true},
        new Links { id = 4, idUsuario = 1, link = "#", texto = "LINK", imagem = "", ordem = 4 , ativo = true},
    };

    List<Redes> listaRedes = new List<Redes>
    {
        new Redes { id = 1, idUsuario = 1, link = "https://www.instagram.com/gustavoeriick/", icone = 1, ordem = 1 , ativo = true},
        new Redes { id = 1, idUsuario = 1, link = "https://github.com/gustavoeriick", icone = 3, ordem = 1 , ativo = true},
    };

    List<Icones> listaIcones = new List<Icones>
    {
        new Icones { id = 1, icoRede = "bi-instagram"},
        new Icones { id = 2, icoRede = "bi-twitter-x"},
        new Icones { id = 3, icoRede = "bi-github"},
    };

    protected override async Task OnInitializedAsync()
    {
        if (url != null & url != "favicon.png")
        {
            carregarConteudo = true;
            usuarioAtual = listaUsuarios.FirstOrDefault(u => u.link == url).id;
            linksUsuario = listaLinks.Where(l => l.idUsuario == usuarioAtual).ToList();
            redesUsuario = listaRedes.Where(r => r.idUsuario == usuarioAtual).ToList();

            imgPerfil = usuarioAtual + ".png";
        }
    }
}